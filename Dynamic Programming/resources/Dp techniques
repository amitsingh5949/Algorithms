
DP has two properties:
 1. Find optimal substructure
 2. Identify overlapping subproblem in Recursion solution
 3. Remove the overlapping subproblem by
  a. Memoization : top-down approach
  b. Tabulation : bottom-up approach

Read : How to solve a Dynamic Programming Problem
https://www.geeksforgeeks.org/solve-dynamic-programming-problem/ 

Read and watch videos : Overlapping Subproblems Property in Dynamic Programming
https://www.geeksforgeeks.org/overlapping-subproblems-property-in-dynamic-programming-dp-1/

Read and watch videos :  https://www.geeksforgeeks.org/overlapping-subproblems-property-in-dynamic-programming-dp-1/
https://www.geeksforgeeks.org/optimal-substructure-property-in-dynamic-programming-dp-2/

https://leetcode.com/problems/partition-equal-subset-sum/discuss/90592/01-knapsack-detailed-explanation
read the comment Does anyone know in which situation 2 dimensional DP can be dropped to 1 dimension? 






0-1-knapsack-problem: 
https://www.geeksforgeeks.org/0-1-knapsack-problem-dp-10/ 
 read what is optimal subtructure and overlapping problem in knapsack
 how recursion solution has this problem and how dp removes it using memoization
 
read this solution  https://leetcode.com/problems/coin-change/solution/
read this solution https://leetcode.com/problems/delete-operation-for-two-strings/solution/

